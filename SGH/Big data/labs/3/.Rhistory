coord_map(project="orthographic", xlim=c(-12,44), ylim=c(35,70))
library(eurostat)
library(eurostat)
library(dplyr)
library(ggplot2)
library(stringr)
library(eurostat)
library(sf)
install.packages("purrr")
install.packages("purrr")
install.packages("purrr")
library(eurostat)
library(dplyr)
library(ggplot2)
library(stringr)
library(eurostat)
library(dplyr)
library(ggplot2)
library(stringr)
library(purrr)
library(eurostat)
library(eurostat)
library(purrr)
library(eurostat)
# Data from Eurostat
current_pop <- get_eurostat("demo_r_pjangrp3", time_format = "raw", stringsAsFactors = FALSE) %>%
filter(time == 2015,
nchar(geo) == 4,
sex == "T",
age == "TOTAL") %>%
select(-unit) %>%
rename(current = values,
time_current = time)
devtools::install_github("eurostat/restatapi")
library(eurostat)
library("eurostat", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
detach("package:eurostat", unload=TRUE)
library("eurostat", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install_github("ropengov/eurostat")
install.packages("github")
devtools::install_github('timelyportfolio/d3vennR')
library("eurostat", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages("envir")
library(keras)
use_condaenv("r-tensorflow")
dataset_mnist()
library(reticulate)
py_run_string('import keras')
install.packages("reticulate")
install.packages("reticulate")
library(reticulate)
conda_remove("r-tensorflow")
library(keras)
install_keras()
library(keras)
use_condaenv("r-tensorflow")
dataset_mnist()
library("kerasR", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library(keras)
use_condaenv("r-tensorflow")
dataset_mnist()
library(reticulate)
install.packages("reticulate")
install.packages("reticulate")
library(reticulate)
conda_remove("r-tensorflow")
library(keras)
install_keras()
library(keras)
install_keras(method = c("auto", "virtualenv", "conda"), conda = "auto",
tensorflow = "default", extra_packages = NULL)
use_python()
library(keras)
library(reticulate)
use_python('/opt/anaconda/anaconda3/envs/r-tensorflow/bin/python')
py_config()
dataset_mnist()
use_condaenv("r-tensorflow")
py_config()
dataset_mnist()
reticulate::py_discover_config("keras")
model <- keras_model_sequential()
reticulate::py_discover_config("tensorflow")
library(keras)
use_condaenv("r-tensorflow")
use_python()
use_condaenv("r-tensorflow")
use_python('/opt/anaconda/anaconda3/envs/r-tensorflow/bin/python')
dataset_mnist()
reticulate::py_discover_config("keras")
reticulate::py_discover_config("tensorflow")
load("~/Desktop/SGH/2 semester/Big data/books/deep-learning-with-r-notebooks-master/notebooks/.RData")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library("keras", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("kerasR", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
train_images <- mnist$train$x
Sys.setenv(RETICULATE_PYTHON = "/anaconda3/envs/r-tensorflow/bin")
library(reticulate)
Sys.setenv(RETICULATE_PYTHON = "/anaconda3/envs/r-tensorflow/bin")
library(keras)
mnist <- dataset_mnist()
py_config()
library(reticulate)
sys <- import("sys")
sys$path
import("keras")
devtools::install_github("rstudio/tensorflow")
devtools::install_github("rstudio/keras")
tensorflow::install_tensorflow()
tensorflow::tf_config()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
strsplit(shell("set path",intern=TRUE),split=";")
use_condaenv("r-tensorflow")
use_python('/opt/anaconda/anaconda3/envs/r-tensorflow/bin/python')
dataset_mnist()
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
py_config()
reticulate::py_discover_config("tensorflow")
Sys.setenv(RETICULATE_PYTHON = "/anaconda3/lib/python3.7")
py_config()
Sys.setenv(RETICULATE_PYTHON = "/anaconda3/envs/r-tensorflow/bin/python")
Sys.setenv(RETICULATE_PYTHON = "/anaconda3/lib/python3.7")
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library(devtools)
library(devtools)
devtools::install_github("rstudio/tensorflow")
library("tensorflow", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install_tensorflow()
library("keras", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("reticulate", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
library("kerasR", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7")
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
gcc --version
install.packages("keras")
install.packages("keras")
use_python("/usr/local/bin/python3")
library("keras", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("kerasR", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("reticulate", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
use_python("/usr/local/bin/python3")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
use_python(python = "/usr/bin/python3", required = TRUE)
use_python(python = "/usr/bin/python3.7.2", required = TRUE)
#Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7")
#Sys.setenv(RETICULATE_PYTHON = "/anaconda3/lib/python3.7")
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
use_python(python = "/usr/bin/python3.7.2", required = TRUE)
library(keras)
mnist <- dataset_mnist()
use_python(python = "/usr/bin/python3.7", required = TRUE)
use_python(python = "/usr/bin/python3.7.2", required = TRUE)
use_python(python = "/usr/bin/python", required = TRUE)
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2
use_python(python = "/usr/bin/python", required = TRUE)
library(keras)
mnist <- dataset_mnist()
train_images <- mnist$train$x
train_labels <- mnist$train$y
test_images <- mnist$test$x
test_labels <- mnist$test$y
library(keras)
mnist <- dataset_mnist()
install_keras()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
mnist <- dataset_mnist()
devtools::install_github("rstudio/keras")
system('defaults write org.R-project.R force.LANG en_US.UTF-8')
reticulate::py_discover_config("keras")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2")
use_python(python = "/usr/bin/python", required = TRUE)
library(keras)
mnist <- dataset_mnist()
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
use_python(python = "/usr/bin/python", required = TRUE)
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
Sys.setenv(RETICULATE_PYTHON = "/anaconda3/lib/python3.7")
library(reticulate)
Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2")
use_python(python = "/usr/bin/python3", required = TRUE)
use_python(python = "/usr/bin/python 3.7.2", required = TRUE)
use_python(python = "/usr/bin/python", required = TRUE)
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
reticulate::py_discover_config("keras")
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
reticulate::py_discover_config("keras")
library(keras)
mnist <- dataset_mnist()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
reticulate::py_discover_config("tensorflow")
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
reticulate::py_discover_config("keras")
reticulate::py_discover_config("tensorflow")
# Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2")
Sys.setenv(RETICULATE_PYTHON = "/anaconda3/lib/python3.7")
use_python('/opt/anaconda/anaconda3/envs/r-tensorflow/bin/python')
library(keras)
mnist <- dataset_mnist()
use_python(python = "/usr/bin/python", required = TRUE)
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
use_python(python = "/usr/bin/python3", required = TRUE)
use_python(python = "/usr/bin/python3.7.2", required = TRUE)
use_python(python = "/usr/bin/python", required = TRUE)
use_python(python = "/usr/bin/python3", required = TRUE)
use_python(python = "/usr/bin/python3", required = TRUE)
Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2
use_python(python = "/usr/bin/python3.7.2", required = TRUE)
library(keras)
mnist <- dataset_mnist()
train_images <- mnist$train$x
train_labels <- mnist$train$y
test_images <- mnist$test$x
test_labels <- mnist$test$y
library(keras)
mnist <- dataset_mnist()
library(reticulate)
use_python(python = Sys.which("python3"), required = TRUE)
py_config()
Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2
py_config()
py_config()
use_python(python = Sys.which("python3"), required = TRUE)
tensorflow::install_tensorflow()
py_config()
Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2
py_config()
reticulate::py_discover_config("keras")
py_config()
use_python(python = "/usr/bin/python3.7.2", required = TRUE)
library(reticulate)
use_python(python = Sys.which("python3"), required = TRUE)
py_config()
# Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2")
Sys.setenv(RETICULATE_PYTHON = "/anaconda3/lib/python3.7.2")
py_config()
Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2
py_config()
use_python(python = Sys.which("python3"), required = TRUE)
py_config()
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
use_python(python = Sys.which("python3"), required = TRUE)
py_config()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
library(keras)
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
use_python(python = Sys.which("python3"), required = TRUE)
py_config()
# Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2")
# Sys.setenv(RETICULATE_PYTHON = "/anaconda3/lib/python3.7.2")
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
use_python(python = Sys.which("python3"), required = TRUE)
py_config()
py_config()
library(keras)
mnist <- dataset_mnist()
library(reticulate)
py_config()
# -------------------------------------------------------------------
library(reticulate)
# Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2")
# Sys.setenv(RETICULATE_PYTHON = "/anaconda3/lib/python3.7.2")
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
use_python(python = Sys.which("python3"), required = TRUE)
py_config()
library(keras)
mnist <- dataset_mnist()
# Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2")
# Sys.setenv(RETICULATE_PYTHON = "/anaconda3/lib/python3.7.2")
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
use_python(python = Sys.which("python3"), required = TRUE)
py_config()
# Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2")
# Sys.setenv(RETICULATE_PYTHON = "/anaconda3/lib/python3.7.2")
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
py_config()
# -------------------------------------------------------------------
library(reticulate)
# Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2")
# Sys.setenv(RETICULATE_PYTHON = "/anaconda3/lib/python3.7.2")
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
use_python(python = Sys.which("python3"), required = TRUE)
py_config()
library(keras)
mnist <- dataset_mnist()
# -------------------------------------------------------------------
library(reticulate)
# Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2")
# Sys.setenv(RETICULATE_PYTHON = "/anaconda3/lib/python3.7.2")
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
use_python(python = Sys.which("python3"), required = TRUE)
py_config()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
# Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2")
# Sys.setenv(RETICULATE_PYTHON = "/anaconda3/lib/python3.7.2")
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
use_python(python = Sys.which("python3"), required = TRUE)
py_config()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
# Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2")
# Sys.setenv(RETICULATE_PYTHON = "/anaconda3/lib/python3.7.2")
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
py_config()
library(keras)
mnist <- dataset_mnist()
Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2
py_config()
use_python(python = Sys.which("python3"), required = TRUE)
# !!!! -------------------------------------------------------------------
library(reticulate)
# Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2")
# Sys.setenv(RETICULATE_PYTHON = "/anaconda3/lib/python3.7.2")
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
use_python(python = Sys.which("python3"), required = TRUE)
py_config()
reticulate::py_discover_config("keras")
devtools::install_github("rstudio/keras")
reticulate::py_discover_config("keras")
reticulate::py_discover_config("tensorflow")
library(keras)
mnist <- dataset_mnist()
use_python(python = Sys.which("python3"), required = TRUE)
py_config()
library(keras)
install_tensorflow()
install_tensorflow()
devtools::install_github("rstudio/tensorflow")
# Read in MNIST data
mnist <- dataset_mnist()
install_tensorflow()
library(tensorflow)
install_tensorflow()
library(keras)
library(tensorflow)
sess = tf$Session()
hello <- tf$constant('Hello, TensorFlow!')
sess$run(hello)
# Read in MNIST data
mnist <- dataset_mnist()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
train_images <- mnist$train$x
train_labels <- mnist$train$y
test_images <- mnist$test$x
test_labels <- mnist$test$y
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
train_images <- mnist$train$x
train_labels <- mnist$train$y
test_images <- mnist$test$x
test_labels <- mnist$test$y
View(mnist)
str(train_images)
str(train_labels)
str(test_images)
str(test_labels)
network <- keras_model_sequential() %>%
layer_dense(units = 512, activation = "relu", input_shape = c(28 * 28)) %>%
layer_dense(units = 10, activation = "softmax")
network %>% compile(
optimizer = "rmsprop",
loss = "categorical_crossentropy",
metrics = c("accuracy")
)
train_images <- array_reshape(train_images, c(60000, 28 * 28))
train_images <- train_images / 255
test_images <- array_reshape(test_images, c(10000, 28 * 28))
test_images <- test_images / 255
train_labels <- to_categorical(train_labels)
test_labels <- to_categorical(test_labels)
View(train_labels)
network %>% fit(train_images, train_labels, epochs = 5, batch_size = 128)
metrics <- network %>% evaluate(test_images, test_labels, verbose = 0)
metrics
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
train_images <- mnist$train$x
train_labels <- mnist$train$y
test_images <- mnist$test$x
test_labels <- mnist$test$y
system.time(m <- matrix(rnorm(10000^2), ncol=10000))
m
system.time(m[lower.tri(m)] <- 0)
system.time(sum(m))
View(m)
rm(list=ls())
require(xgboost)
data(agaricus.train, package='xgboost')
data(agaricus.test, package='xgboost')
train <- agaricus.train
test <- agaricus.test
str(train)
dim(train$data)
dim(test$data)
library('BCA')
library('car')
library('RcmdrMisc')
library('sandwich')
library('relimp')
library(corrplot)
setwd("~/Desktop/SGH/2 semester/Big data/labs/3")
hour <- read.csv("hour.csv")
# HOUR
hour$dteday <- NULL
# Check variables
variable.summary(hour)
corr <- cor(hour)
corrplot(corr, method = "number")
# DAY
day$dteday <- NULL
variable.summary(day)
corr <- cor(day)
day <- read.csv("day.csv")
# DAY
day$dteday <- NULL
variable.summary(day)
corr <- cor(day)
corrplot(corr, method = "number")
