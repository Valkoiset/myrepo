install.packages("github")
devtools::install_github('timelyportfolio/d3vennR')
library("eurostat", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages("envir")
library(keras)
use_condaenv("r-tensorflow")
dataset_mnist()
library(reticulate)
py_run_string('import keras')
install.packages("reticulate")
install.packages("reticulate")
library(reticulate)
conda_remove("r-tensorflow")
library(keras)
install_keras()
library(keras)
use_condaenv("r-tensorflow")
dataset_mnist()
library("kerasR", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library(keras)
use_condaenv("r-tensorflow")
dataset_mnist()
library(reticulate)
install.packages("reticulate")
install.packages("reticulate")
library(reticulate)
conda_remove("r-tensorflow")
library(keras)
install_keras()
library(keras)
install_keras(method = c("auto", "virtualenv", "conda"), conda = "auto",
tensorflow = "default", extra_packages = NULL)
use_python()
library(keras)
library(reticulate)
use_python('/opt/anaconda/anaconda3/envs/r-tensorflow/bin/python')
py_config()
dataset_mnist()
use_condaenv("r-tensorflow")
py_config()
dataset_mnist()
reticulate::py_discover_config("keras")
model <- keras_model_sequential()
reticulate::py_discover_config("tensorflow")
library(keras)
use_condaenv("r-tensorflow")
use_python()
use_condaenv("r-tensorflow")
use_python('/opt/anaconda/anaconda3/envs/r-tensorflow/bin/python')
dataset_mnist()
reticulate::py_discover_config("keras")
reticulate::py_discover_config("tensorflow")
load("~/Desktop/SGH/2 semester/Big data/books/deep-learning-with-r-notebooks-master/notebooks/.RData")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library("keras", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("kerasR", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
train_images <- mnist$train$x
Sys.setenv(RETICULATE_PYTHON = "/anaconda3/envs/r-tensorflow/bin")
library(reticulate)
Sys.setenv(RETICULATE_PYTHON = "/anaconda3/envs/r-tensorflow/bin")
library(keras)
mnist <- dataset_mnist()
py_config()
library(reticulate)
sys <- import("sys")
sys$path
import("keras")
devtools::install_github("rstudio/tensorflow")
devtools::install_github("rstudio/keras")
tensorflow::install_tensorflow()
tensorflow::tf_config()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
strsplit(shell("set path",intern=TRUE),split=";")
use_condaenv("r-tensorflow")
use_python('/opt/anaconda/anaconda3/envs/r-tensorflow/bin/python')
dataset_mnist()
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
py_config()
reticulate::py_discover_config("tensorflow")
Sys.setenv(RETICULATE_PYTHON = "/anaconda3/lib/python3.7")
py_config()
Sys.setenv(RETICULATE_PYTHON = "/anaconda3/envs/r-tensorflow/bin/python")
Sys.setenv(RETICULATE_PYTHON = "/anaconda3/lib/python3.7")
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library(devtools)
library(devtools)
devtools::install_github("rstudio/tensorflow")
library("tensorflow", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install_tensorflow()
library("keras", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("reticulate", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
library("kerasR", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7")
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
gcc --version
install.packages("keras")
install.packages("keras")
use_python("/usr/local/bin/python3")
library("keras", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("kerasR", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("reticulate", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
use_python("/usr/local/bin/python3")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
use_python(python = "/usr/bin/python3", required = TRUE)
use_python(python = "/usr/bin/python3.7.2", required = TRUE)
#Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7")
#Sys.setenv(RETICULATE_PYTHON = "/anaconda3/lib/python3.7")
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
use_python(python = "/usr/bin/python3.7.2", required = TRUE)
library(keras)
mnist <- dataset_mnist()
use_python(python = "/usr/bin/python3.7", required = TRUE)
use_python(python = "/usr/bin/python3.7.2", required = TRUE)
use_python(python = "/usr/bin/python", required = TRUE)
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2
use_python(python = "/usr/bin/python", required = TRUE)
library(keras)
mnist <- dataset_mnist()
train_images <- mnist$train$x
train_labels <- mnist$train$y
test_images <- mnist$test$x
test_labels <- mnist$test$y
library(keras)
mnist <- dataset_mnist()
install_keras()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
mnist <- dataset_mnist()
devtools::install_github("rstudio/keras")
system('defaults write org.R-project.R force.LANG en_US.UTF-8')
reticulate::py_discover_config("keras")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2")
use_python(python = "/usr/bin/python", required = TRUE)
library(keras)
mnist <- dataset_mnist()
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
use_python(python = "/usr/bin/python", required = TRUE)
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
Sys.setenv(RETICULATE_PYTHON = "/anaconda3/lib/python3.7")
library(reticulate)
Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2")
use_python(python = "/usr/bin/python3", required = TRUE)
use_python(python = "/usr/bin/python 3.7.2", required = TRUE)
use_python(python = "/usr/bin/python", required = TRUE)
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
reticulate::py_discover_config("keras")
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
reticulate::py_discover_config("keras")
library(keras)
mnist <- dataset_mnist()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
reticulate::py_discover_config("tensorflow")
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
reticulate::py_discover_config("keras")
reticulate::py_discover_config("tensorflow")
# Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2")
Sys.setenv(RETICULATE_PYTHON = "/anaconda3/lib/python3.7")
use_python('/opt/anaconda/anaconda3/envs/r-tensorflow/bin/python')
library(keras)
mnist <- dataset_mnist()
use_python(python = "/usr/bin/python", required = TRUE)
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
use_python(python = "/usr/bin/python3", required = TRUE)
use_python(python = "/usr/bin/python3.7.2", required = TRUE)
use_python(python = "/usr/bin/python", required = TRUE)
use_python(python = "/usr/bin/python3", required = TRUE)
use_python(python = "/usr/bin/python3", required = TRUE)
Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2
use_python(python = "/usr/bin/python3.7.2", required = TRUE)
library(keras)
mnist <- dataset_mnist()
train_images <- mnist$train$x
train_labels <- mnist$train$y
test_images <- mnist$test$x
test_labels <- mnist$test$y
library(keras)
mnist <- dataset_mnist()
library(reticulate)
use_python(python = Sys.which("python3"), required = TRUE)
py_config()
Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2
py_config()
py_config()
use_python(python = Sys.which("python3"), required = TRUE)
tensorflow::install_tensorflow()
py_config()
Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2
py_config()
reticulate::py_discover_config("keras")
py_config()
use_python(python = "/usr/bin/python3.7.2", required = TRUE)
library(reticulate)
use_python(python = Sys.which("python3"), required = TRUE)
py_config()
# Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2")
Sys.setenv(RETICULATE_PYTHON = "/anaconda3/lib/python3.7.2")
py_config()
Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2
py_config()
use_python(python = Sys.which("python3"), required = TRUE)
py_config()
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
use_python(python = Sys.which("python3"), required = TRUE)
py_config()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
library(keras)
library(keras)
mnist <- dataset_mnist()
library(keras)
mnist <- dataset_mnist()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
use_python(python = Sys.which("python3"), required = TRUE)
py_config()
# Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2")
# Sys.setenv(RETICULATE_PYTHON = "/anaconda3/lib/python3.7.2")
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
use_python(python = Sys.which("python3"), required = TRUE)
py_config()
py_config()
library(keras)
mnist <- dataset_mnist()
library(reticulate)
py_config()
# -------------------------------------------------------------------
library(reticulate)
# Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2")
# Sys.setenv(RETICULATE_PYTHON = "/anaconda3/lib/python3.7.2")
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
use_python(python = Sys.which("python3"), required = TRUE)
py_config()
library(keras)
mnist <- dataset_mnist()
# Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2")
# Sys.setenv(RETICULATE_PYTHON = "/anaconda3/lib/python3.7.2")
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
use_python(python = Sys.which("python3"), required = TRUE)
py_config()
# Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2")
# Sys.setenv(RETICULATE_PYTHON = "/anaconda3/lib/python3.7.2")
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
py_config()
# -------------------------------------------------------------------
library(reticulate)
# Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2")
# Sys.setenv(RETICULATE_PYTHON = "/anaconda3/lib/python3.7.2")
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
use_python(python = Sys.which("python3"), required = TRUE)
py_config()
library(keras)
mnist <- dataset_mnist()
# -------------------------------------------------------------------
library(reticulate)
# Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2")
# Sys.setenv(RETICULATE_PYTHON = "/anaconda3/lib/python3.7.2")
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
use_python(python = Sys.which("python3"), required = TRUE)
py_config()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
# Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2")
# Sys.setenv(RETICULATE_PYTHON = "/anaconda3/lib/python3.7.2")
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
use_python(python = Sys.which("python3"), required = TRUE)
py_config()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
# Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2")
# Sys.setenv(RETICULATE_PYTHON = "/anaconda3/lib/python3.7.2")
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
py_config()
library(keras)
mnist <- dataset_mnist()
Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2
py_config()
use_python(python = Sys.which("python3"), required = TRUE)
# !!!! -------------------------------------------------------------------
library(reticulate)
# Sys.setenv(RETICULATE_PYTHON = "/Macintosh HD/Applications/Python 3.7.2")
# Sys.setenv(RETICULATE_PYTHON = "/anaconda3/lib/python3.7.2")
Sys.setenv(RETICULATE_PYTHON = "/usr/local/bin/python3")
use_python(python = Sys.which("python3"), required = TRUE)
py_config()
reticulate::py_discover_config("keras")
devtools::install_github("rstudio/keras")
reticulate::py_discover_config("keras")
reticulate::py_discover_config("tensorflow")
library(keras)
mnist <- dataset_mnist()
use_python(python = Sys.which("python3"), required = TRUE)
py_config()
library(keras)
install_tensorflow()
install_tensorflow()
devtools::install_github("rstudio/tensorflow")
# Read in MNIST data
mnist <- dataset_mnist()
install_tensorflow()
library(tensorflow)
install_tensorflow()
library(keras)
library(tensorflow)
sess = tf$Session()
hello <- tf$constant('Hello, TensorFlow!')
sess$run(hello)
# Read in MNIST data
mnist <- dataset_mnist()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
train_images <- mnist$train$x
train_labels <- mnist$train$y
test_images <- mnist$test$x
test_labels <- mnist$test$y
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
train_images <- mnist$train$x
train_labels <- mnist$train$y
test_images <- mnist$test$x
test_labels <- mnist$test$y
View(mnist)
str(train_images)
str(train_labels)
str(test_images)
str(test_labels)
network <- keras_model_sequential() %>%
layer_dense(units = 512, activation = "relu", input_shape = c(28 * 28)) %>%
layer_dense(units = 10, activation = "softmax")
network %>% compile(
optimizer = "rmsprop",
loss = "categorical_crossentropy",
metrics = c("accuracy")
)
train_images <- array_reshape(train_images, c(60000, 28 * 28))
train_images <- train_images / 255
test_images <- array_reshape(test_images, c(10000, 28 * 28))
test_images <- test_images / 255
train_labels <- to_categorical(train_labels)
test_labels <- to_categorical(test_labels)
View(train_labels)
network %>% fit(train_images, train_labels, epochs = 5, batch_size = 128)
metrics <- network %>% evaluate(test_images, test_labels, verbose = 0)
metrics
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(keras)
mnist <- dataset_mnist()
train_images <- mnist$train$x
train_labels <- mnist$train$y
test_images <- mnist$test$x
test_labels <- mnist$test$y
library(dplyr)
data_train <- read.csv("https://raw.githubusercontent.com/thomaspernet/data_csv_r/master/data/titanic_train.csv") %>%
select(-1)
data_test <- read.csv("https://raw.githubusercontent.com/thomaspernet/data_csv_r/master/data/titanic_test.csv") %>%
select(-1)
library(randomForest)
library(caret)
library(e1071)
# Define the control
trControl <- trainControl(method = "cv",
number = 10,
search = "grid")
set.seed(1234)
# Run the model
rf_default <- train(survived~.,
data = data_train,
method = "rf",
metric = "Accuracy",
trControl = trControl)
# Print the results
print(rf_default)
View(data_train)
set.seed(1234)
# Run the model
rf_default <- train(DefFlag~.,
data = PwC.train,
method = "rf",
metric = "Accuracy",
trControl = trControl)
setwd("~/Desktop/SGH/2 semester/Statistical learning methods/R/PwC project")
setwd("~/Desktop/SGH/2 semester/Statistical learning methods/R/PwC project")
setwd("~/Desktop/SGH/2 semester/Statistical learning methods/R/PwC project")
PwC <- read.csv("PwC_Case_Study_phase_1.csv")
# Define the control
trControl <- trainControl(method = "cv",
number = 10,
search = "grid")
# dividing PwC on 70% and 30%
divider <- sample(2, nrow(PwC), replace=TRUE, prob=c(0.7, 0.3))
PwC.train <- PwC[divider==1, ]
PwC.test <- PwC[divider==2, ]
# Define the control
trControl <- trainControl(method = "cv",
number = 10,
search = "grid")
set.seed(1234)
# Run the model
rf_default <- train(DefFlag~.,
data = PwC.train,
method = "rf",
metric = "Accuracy",
trControl = trControl)
PwC <- read.csv("PwC_Case_Study_phase_1.csv")
PWC <- na.omit(PwC)
# dividing PwC on 70% and 30%
divider <- sample(2, nrow(PwC), replace=TRUE, prob=c(0.7, 0.3))
PwC.train <- PwC[divider==1, ]
PwC.test <- PwC[divider==2, ]
# Define the control
trControl <- trainControl(method = "cv",
number = 10,
search = "grid")
set.seed(1234)
# Run the model
rf_default <- train(DefFlag~.,
data = PwC.train,
method = "rf",
metric = "Accuracy",
trControl = trControl)
# Print the results
print(rf_default)
setwd("~/Desktop/SGH/2 semester/Statistical learning methods/mnist")
setwd("~/Desktop/SGH/2 semester/Statistical learning methods/mnist")
f <- file("mnist_test.int", "rb")
cls <- as.integer(readBin(f, raw(), 1))
ing <- matrix(as.integer(readBin(f, raw(), 28*28), nrow = 28))
close(f)
